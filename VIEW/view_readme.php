<?php

function callReadme()
{
?>

<div id="layoutSidenav_content">
        <main>
        <div class="container">
            <div class="db">
             <h1><i class="fas fa-database"></i> <span class="badge badge-dark">Database</span></h1>
             <p class="text-justify">
                Pour conceptualiser la database, je suis parti du principe quâ€™un module pouvait fournir des dÃ©tails sur ses conditions techniques dâ€™utilisation. 
                Lâ€™enjeu Ã©tait de rÃ©cupÃ©rer toutes les informations que la table Â« dÃ©tails Â» va faire transiter pour avoir un historique dâ€™informations concernant lâ€™Ã©volution 
                des donnÃ©es dans la table Â« dÃ©tails Â» pendant lâ€™activation dâ€™un module.
                <br/>
                <br/>
                Ã€ partir de cet historique, on peut manipuler les donnÃ©es, les traiter et restituer les diffÃ©rentes informations dÃ©sirÃ©es.
                <br/>
                <br/>
                Jâ€™ai dÃ» crÃ©er une cardinalitÃ© entre les tables module et dÃ©tails (1,1 â€“ 1,1 ; voir MCD sur JMerise) ainsi quâ€™une mÃªme cardinalitÃ© entre les tables dÃ©tails et historique 
                avec plusieurs clÃ©s en auto-incrÃ©ment Ã  condition dâ€™un Â« trigger Â» mis en place. Trigger qui va enregistrer toutes les modifications et rÃ©cupÃ©rer toutes les informations 
                faites sur une ligne de la table dÃ©tails, en cas dâ€™update voire mÃªme de delete.
             </p>
            </div>
            <div class="front">
             <h1><i class="fas fa-tv"></i> <span class="badge badge-info">Frontend</span></h1>
             <p class="text-justify">
                Pour le visuel de l'application, j'ai d'abord consultÃ© diffÃ©rents visuels pour du monitoring de donnÃ©es. Le choix d'un CMS Admin m'est donc 
                naturellement venu Ã  l'esprit. Souhaitant construire mes pages avec Bootstrap (bien que la lisibilitÃ© du code HTML en souffre), je me suis orientÃ© vers un template gratuit 
                proposÃ© par SB Admin qui utilise cette collection d'outils.
                <br/>
                <br/>
                Le reste de mes pages dÃ©coule naturellement de cette construction tout en essayant de respecter une accessibilitÃ© et une lisibilitÃ© de l'application pertinantes.
                Les couleurs principales du site sont Ã©purÃ©es et homogÃ¨nes, les blocs principaux des pages sont soumis Ã  la mÃªme hiÃ©rarchie.
                <br/>
                <br/>
                Ã€ l'occasion  de ce test, je me suis confrontÃ© Ã  l'extension Bootstrap Table, extrÃªmement  utile pour parcourir un tableau; j'ai Ã©galement dÃ©couvert Chart.js pour gÃ©nÃ©rer
                des graphiques (un vrai casse-tÃªte soit dit en passant ğŸ˜…). Le site est entiÃ¨rement responsive et rÃ©pond aux besoins mobiles.  
             </p>
            </div>
            <div class="back">
             <h1><i class="fas fa-keyboard"></i> <span class="badge badge-warning" style="color:white;">Backend</span></h1>
             <p class="text-justify">
                Le projet est codÃ© sur PHP 7.4.15 et est orientÃ© objet. Il respecte la couche Model (Entity) / DAO (Repository) / Service / Controller / View. Les traitements vers 
                la base de donnÃ©es sont sÃ©curisÃ©s des injections SQL et l'administration des erreurs de communication via la database est dirigÃ© grÃ¢ce au systÃ¨me de gestion d'exceptions. 
                Des regex sont appliquÃ©s sur le script du simulateur ainsi que des contrÃ´les basiques sur la vÃ©rification des donnÃ©es avec transmission des messages d'erreurs vers l'index
                au niveau de la navbar.
                <br/>
                <br/>
                Le choix du module sur les pages autres que l'index est exÃ©cutÃ© via une requÃªte Ajax de maniÃ¨re asynchrone. Il en est de mÃªme pour l'insertion des donnÃ©es sur les graphiques 
                transmises de PHP vers Javascript via json. Le code est commentÃ© expliquant le rÃ´le des fonctions et leurs appels. L'application est donc entiÃ¨rement dynamique. Bon test !
             </p>
            </div>
        </div>
        </main>

<?php
}

?>